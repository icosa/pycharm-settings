<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>args</entry>
        <entry>folder</entry>
        <entry>source</entry>
        <entry>target</entry>
        <entry encoding="base64">XDxub3RcPg==</entry>
        <entry encoding="base64">XDx0ZW1wX3Jlc3VsdHNfZGlyXD4=</entry>
        <entry encoding="base64">XDxyb290Y29uXD4=</entry>
        <entry encoding="base64">XDxzaWR1c19iZVw+</entry>
        <entry encoding="base64">XDxXb3JrX2NvbnRleHRfZGlyZWN0b3J5XD4=</entry>
        <entry encoding="base64">XDx3b3JrX2NvbnRleHRfZGlyZWN0b3J5XD4=</entry>
        <entry encoding="base64">XDxnZW5lcmF0ZV9kcmNfdmlld19jb25maWdcPg==</entry>
        <entry encoding="base64">XDxhbm5vX3BhdGhfbGlzdFw+</entry>
        <entry>if</entry>
        <entry>hscore</entry>
        <entry encoding="base64">XDxzbGlkZV9uYW1lc190b19pZHNcPg==</entry>
        <entry encoding="base64">XDxjb21wdXRlX2hzY29yZV9mb3JfY2VsbHNcPg==</entry>
        <entry encoding="base64">XDxFeHBlY3RcPg==</entry>
        <entry encoding="base64">XDxjb250YWluZXJcPg==</entry>
      </history-search>
      <history-cmd>
        <entry>sw</entry>
        <entry>%s/folder/dir/</entry>
        <entry>%s/source/left/g</entry>
        <entry>%s/target/right/g</entry>
        <entry>w2</entry>
        <entry>%s/if/for/g</entry>
        <entry>W</entry>
        <entry>x</entry>
        <entry>w#</entry>
        <entry>hs</entry>
        <entry>hr</entry>
        <entry>vs</entry>
        <entry>sp</entry>
        <entry>q</entry>
        <entry>hsplit</entry>
        <entry>split</entry>
        <entry encoding="base64">JzwsJz53</entry>
        <entry>we</entry>
        <entry>s</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="/Python Console" timestamp="1589215076523">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/portal.py" timestamp="1589204282310" />
      <file name="/fragment.py" timestamp="1589213891954">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/portal_tests/mocks/gateway/run.py" timestamp="1589204641257" />
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" timestamp="1589267233945">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="164" column="12" />
        <mark key="." line="94" column="53" />
        <mark key="^" line="94" column="54" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/utils/wait.py" timestamp="1589204980291" />
      <file name="/slides_page.py" timestamp="1589206482668">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="73" />
      </file>
      <file name="/Dummy.txt" timestamp="1589264182391">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/base_page.py" timestamp="1589204971435" />
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/portal_tests/tests/login_page/test_login.py" timestamp="1589189488562">
        <mark key="[" line="7" column="8" />
        <mark key="]" line="7" column="45" />
        <mark key="^" line="17" column="40" />
        <mark key="." line="17" column="40" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/README.md" timestamp="1589189554819">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
        <mark key="^" line="30" column="6" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/.gitlab-ci.yml" timestamp="1586205095413">
        <mark key="[" line="57" column="6" />
        <mark key="]" line="57" column="86" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/selenium/webdriver/support/wait.py" timestamp="1589204988960" />
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/portal_tests/conftest.py" timestamp="1589204876578">
        <mark key="[" line="37" column="0" />
        <mark key="]" line="37" column="0" />
        <mark key="." line="37" column="0" />
        <mark key="^" line="37" column="14" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" timestamp="1589267144486">
        <mark key="'" line="0" column="2" />
        <mark key="[" line="0" column="2" />
        <mark key="]" line="61" column="8" />
        <mark key="^" line="0" column="3" />
        <mark key="." line="0" column="2" />
      </file>
      <file name="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/portal_tests/tests/metadata_table/test_metadata_table.py" timestamp="1589215470375">
        <mark key="'" line="14" column="41" />
        <mark key="[" line="26" column="33" />
        <mark key="]" line="29" column="35" />
        <mark key="^" line="29" column="35" />
        <mark key="." line="29" column="34" />
      </file>
    </filemarks>
    <jumps>
      <jump line="28" column="8" filename="C:/dev/definiens/QCmonkey/test/unit/test_cli.py" />
      <jump line="30" column="17" filename="C:/dev/definiens/QCmonkey/test/unit/test_cli.py" />
      <jump line="17" column="0" filename="C:/dev/definiens/QCmonkey/test/folder_comp.py" />
      <jump line="27" column="8" filename="C:/dev/definiens/QCmonkey/test/folder_comp.py" />
      <jump line="67" column="11" filename="C:/dev/definiens/QCmonkey/test/qc_results/test_qc_results.py" />
      <jump line="13" column="0" filename="C:/dev/definiens/QCmonkey/test/qc_results/test_qc_results.py" />
      <jump line="15" column="4" filename="C:/dev/definiens/QCmonkey/test/qc_results/test_qc_results.py" />
      <jump line="49" column="0" filename="C:/dev/definiens/QCmonkey/test/qc_results/test_qc_results.py" />
      <jump line="18" column="0" filename="C:/dev/definiens/dl-framework/backend_service/setup.py" />
      <jump line="0" column="0" filename="C:/dev/definiens/dl-framework/backend_service/setup.py" />
      <jump line="2" column="44" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/qcm.py" />
      <jump line="18" column="40" filename="C:/dev/definiens/QCmonkey/annotation_config.yml" />
      <jump line="0" column="0" filename="C:/dev/definiens/QCmonkey/annotation_config.yml" />
      <jump line="16" column="0" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/qcm/config_templates/annotaion_validate_config.yml" />
      <jump line="18" column="23" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/qcm/config_factory.py" />
      <jump line="9" column="15" filename="C:/dev/definiens/sidus/sidus-be/tests/qcm/test_configFactory.py" />
      <jump line="38" column="8" filename="C:/dev/definiens/sidus/sidus-be/tests/qcm/test_configFactory.py" />
      <jump line="15" column="0" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="4" column="4" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/tool_folders.py" />
      <jump line="34" column="27" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="47" column="12" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="22" column="48" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/qcm_config_factory.py" />
      <jump line="40" column="16" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/qcm_config_factory.py" />
      <jump line="29" column="12" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/qcm_config_factory.py" />
      <jump line="16" column="4" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/work_context_service.py" />
      <jump line="66" column="16" filename="C:/dev/definiens/sidus/sidus-be/req-tmp.txt" />
      <jump line="0" column="0" filename="C:/dev/definiens/sidus/sidus-be/req-tmp.txt" />
      <jump line="4" column="5" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/__init__.py" />
      <jump line="6" column="5" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/__init__.py" />
      <jump line="5" column="5" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/__init__.py" />
      <jump line="50" column="24" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="20" column="8" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="28" column="38" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/qcm_service.py" />
      <jump line="375" column="56" filename="C:/dev/definiens/import-script/importscript/__main__.py" />
      <jump line="17" column="10" filename="C:/dev/definiens/import-script/importscript/__main__.py" />
      <jump line="18" column="43" filename="C:/dev/definiens/import-script/importscript/__main__.py" />
      <jump line="372" column="12" filename="C:/dev/definiens/import-script/importscript/__main__.py" />
      <jump line="15" column="0" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/tool_utils.py" />
      <jump line="9" column="0" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/tool_utils.py" />
      <jump line="14" column="45" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/util/tool_utils.py" />
      <jump line="16" column="36" filename="C:/dev/definiens/sidus/sidus-be/tests/util/test_tool_utils.py" />
      <jump line="57" column="41" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/work_context_service.py" />
      <jump line="52" column="29" filename="C:/dev/definiens/sidus/sidus-be/sidus_be/services/work_context_service.py" />
      <jump line="8" column="13" filename="C:/dev/definiens/sidus/sidus-be/tests/util/test_work_context_service.py" />
      <jump line="118" column="26" filename="C:/dev/definiens/import-script/importscript/annotation/annotation_import.py" />
      <jump line="116" column="29" filename="C:/dev/definiens/import-script/importscript/annotation/annotation_import.py" />
      <jump line="77" column="4" filename="C:/dev/definiens/services_toolbox/ripper/tests/test_ripper.py" />
      <jump line="92" column="13" filename="C:/dev/definiens/services_toolbox/import-script/importscript/__main__.py" />
      <jump line="136" column="24" filename="C:/dev/definiens/services_toolbox/import-script/importscript/__main__.py" />
      <jump line="328" column="64" filename="C:/dev/definiens/services_toolbox/import-script/importscript/__main__.py" />
      <jump line="80" column="13" filename="C:/dev/definiens/services_toolbox/import-script/importscript/__main__.py" />
      <jump line="697" column="33" filename="C:/dev/definiens/services_toolbox/ripper/ripper/ripper.py" />
      <jump line="411" column="4" filename="C:/dev/definiens/services_toolbox/ripper/ripper/ripper.py" />
      <jump line="100" column="14" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" />
      <jump line="14" column="36" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" />
      <jump line="93" column="13" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" />
      <jump line="32" column="42" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" />
      <jump line="14" column="41" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/portal_tests/tests/metadata_table/test_metadata_table.py" />
      <jump line="38" column="81" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" />
      <jump line="37" column="89" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" />
      <jump line="36" column="8" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" />
      <jump line="0" column="2" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/pages/slides_page/slides_page.py" />
      <jump line="97" column="21" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" />
      <jump line="0" column="0" filename="C:/dev/definiens/cp2/automated_tests/portal-ui-component-tests/venv/Lib/site-packages/portal_test_utils/page_objects/common/ag_grid/table.py" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text>func(3)</text>
      </register>
      <register name="*" type="4">
        <text>&quot;&quot;&quot;
portal_test_utils.page_objects.common.table

Implement wrapper for generic ag-Grid tables
&quot;&quot;&quot;
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver import ActionChains
from selenium.webdriver.common.keys import Keys

from portal_test_utils.page_objects.common.ag_grid.assay_editor import RowWrapperWithAssayEditor
from portal_test_utils.page_objects.common.ag_grid.header import AgGridHeader
from portal_test_utils.page_objects.common.ag_grid.row import AgGridRowWrapper
from portal_test_utils.page_objects.common.ag_grid.side_bar import AgGridSideBar
from portal_test_utils.utils import By, ElementWrapper
from portal_test_utils.utils import Expect
from portal_test_utils.utils.wait import wait_until

class AgGridTable(ElementWrapper):
    &quot;&quot;&quot;Ag Grid Table wrapper.&quot;&quot;&quot;
    header = AgGridHeader(By.CLASS, 'ag-header')
    body = ElementWrapper(By.CLASS, 'ag-body-viewport')
    side_bar = AgGridSideBar(By.CLASS, 'ag-side-bar')
    row_wrapper = AgGridRowWrapper

    def __init__(self, by=By.CLASS, value='ag-root-wrapper', ignore_context=False, has_assay_editor=False):
        super(AgGridTable, self).__init__(by, value, ignore_context)
        if has_assay_editor:
            self.row_wrapper = RowWrapperWithAssayEditor
        self._rows = []

    # Grid header functionalities
    def list_rendered_columns(self):
        &quot;&quot;&quot;Returns list of rendered columns.&quot;&quot;&quot;
        return self.header.find_elements_by_css_selector('.ag-header-cell')

    def sort_column(self, column, by_selector):
        &quot;&quot;&quot;Sort column in header

        :param column: column identifier
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.sort_column(column, by_selector)

    def filter_column_by_text(self, column, value, condition='contains', by_selector='col_id'):
        &quot;&quot;&quot;Filter a column by text value

        :param column: column identifier
        :param value: value to enter into input field
        :param condition: value to select in the condition dropdown
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.set_value(value, condition)

    def filter_column_by_date(self, column, value, condition='equals', by_selector='col_id'):
        &quot;&quot;&quot;Filter a column by date

        :param column: column identifier
        :param value: date to enter into input field
        :param condition: value to select in the condition dropdown
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.set_date(value, condition)

    def filter_column_by_selected_values(self, column, value_list, by_selector='col_id'):
        &quot;&quot;&quot;ilter a column by values in selection list

        :param column: column identifier
        :param value_list: list of values to select
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.select_values(value_list)

    def reset_column_filter(self, column, by_selector='col_id'):
        &quot;&quot;&quot;Reset the filter on a column

        :param column: column identifier
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.reset_filter_button.click()

    def navigate_to_the_column(self, column_id, last_col_id=None):
        wait_until(self.driver, Expect.visible((By.CSS, '.ag-center-cols-container .ag-row-first')))
        # wait_until(self.driver, Expect.visible((By.CLASS, 'ag-row-first')))
        rendered_columns = [c.get_attribute('col-id') for c in self.list_rendered_columns()]
        last_rendered_column_id = rendered_columns[-1]
        if (column_id in rendered_columns) or (last_col_id == last_rendered_column_id):
            # column visible, or all columns rendered and it was not found
            return True

        # navigate to the last column and check rendered columns once again
        self.get_rows(True)[0].find_cell_by_col_id(last_rendered_column_id).send_keys(Keys.LEFT)
        return self.navigate_to_the_column(column_id, last_rendered_column_id)

    # Grid row functionalities
    def get_rows(self, force=False):
        if not self._rows or force:
            rows = self.context.find_elements_by_css_selector('.ag-center-cols-container .ag-row')
            self._rows = [self.row_wrapper(row, self.driver) for row in rows]
        return self._rows

    @staticmethod
    def get_row_cells(row):
        return row.find_elements_by_css_selector('.ag-cell')

    def expand_row(self, index):
        cell = self.get_rows()[index].find_cell_by_index(0)
        ActionChains(self.driver).move_to_element(cell).double_click().perform()

    def get_row_by_index(self, index):
        try:
            selector = f'.ag-center-cols-container .ag-row[row-index=&quot;{index}&quot;]'
            return self.row_wrapper(self.body.find_element(By.CSS, selector), self.driver)
        except NoSuchElementException:
            return None

    def get_row_by_value_in_column_name(self, column_name, value):
        try:
            column = self.header.find_column(column_name, 'column_name')
            col_id = column.get_attribute('col-id')
            return self.get_row_by_value_in_col_id(col_id, value)
        except NoSuchElementException:
            return None

    def get_row_by_value_in_col_id(self, col_id, value):
        try:
            xpath = f'.//div[@col-id=&quot;{col_id}&quot; and normalize-space(.) = &quot;{value}&quot;]/..'
            return self.row_wrapper(self.body.find_element(By.XPATH, xpath), self.driver)
        except NoSuchElementException:
            return None

    def get_cell_value_by_column_id(self, row, column_id):
        self.navigate_to_the_column(column_id)
        return row.get_cell_value_by_col_id(column_id)

    # Side bar functionalities
    def set_visible_columns(self, column_list):
        with self.side_bar() as side_bar:
            side_bar.columns_panel.enable_columns(column_list)

    def list_visible_columns(self):
        with self.side_bar() as side_bar:
            columns = side_bar.columns_panel.get_all_enabled_columns()
            column_names = [column.text for column in columns]
            return column_names

    def select_all_columns(self):
        with self.side_bar() as side_bar:
            side_bar.columns_panel.select_all()

    def unselect_all_columns(self):
        with self.side_bar() as side_bar:
            s</text>
      </register>
      <register name="-" type="4">
        <text>_SELECTOR</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxjb250YWluZXJcPg==</text>
      </register>
      <register name="0" type="4">
        <text>&quot;&quot;&quot;
portal_test_utils.page_objects.common.table

Implement wrapper for generic ag-Grid tables
&quot;&quot;&quot;
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver import ActionChains
from selenium.webdriver.common.keys import Keys

from portal_test_utils.page_objects.common.ag_grid.assay_editor import RowWrapperWithAssayEditor
from portal_test_utils.page_objects.common.ag_grid.header import AgGridHeader
from portal_test_utils.page_objects.common.ag_grid.row import AgGridRowWrapper
from portal_test_utils.page_objects.common.ag_grid.side_bar import AgGridSideBar
from portal_test_utils.utils import By, ElementWrapper
from portal_test_utils.utils import Expect
from portal_test_utils.utils.wait import wait_until

class AgGridTable(ElementWrapper):
    &quot;&quot;&quot;Ag Grid Table wrapper.&quot;&quot;&quot;
    header = AgGridHeader(By.CLASS, 'ag-header')
    body = ElementWrapper(By.CLASS, 'ag-body-viewport')
    side_bar = AgGridSideBar(By.CLASS, 'ag-side-bar')
    row_wrapper = AgGridRowWrapper

    def __init__(self, by=By.CLASS, value='ag-root-wrapper', ignore_context=False, has_assay_editor=False):
        super(AgGridTable, self).__init__(by, value, ignore_context)
        if has_assay_editor:
            self.row_wrapper = RowWrapperWithAssayEditor
        self._rows = []

    # Grid header functionalities
    def list_rendered_columns(self):
        &quot;&quot;&quot;Returns list of rendered columns.&quot;&quot;&quot;
        return self.header.find_elements_by_css_selector('.ag-header-cell')

    def sort_column(self, column, by_selector):
        &quot;&quot;&quot;Sort column in header

        :param column: column identifier
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.sort_column(column, by_selector)

    def filter_column_by_text(self, column, value, condition='contains', by_selector='col_id'):
        &quot;&quot;&quot;Filter a column by text value

        :param column: column identifier
        :param value: value to enter into input field
        :param condition: value to select in the condition dropdown
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.set_value(value, condition)

    def filter_column_by_date(self, column, value, condition='equals', by_selector='col_id'):
        &quot;&quot;&quot;Filter a column by date

        :param column: column identifier
        :param value: date to enter into input field
        :param condition: value to select in the condition dropdown
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.set_date(value, condition)

    def filter_column_by_selected_values(self, column, value_list, by_selector='col_id'):
        &quot;&quot;&quot;ilter a column by values in selection list

        :param column: column identifier
        :param value_list: list of values to select
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.select_values(value_list)

    def reset_column_filter(self, column, by_selector='col_id'):
        &quot;&quot;&quot;Reset the filter on a column

        :param column: column identifier
        :param by_selector: 'column_name' or 'col_id'
        &quot;&quot;&quot;
        with self.header() as header:
            header.open_column_menu(column, by_selector)
            header.menu.open_filters_menu()
            header.menu.tab_body.reset_filter_button.click()

    def navigate_to_the_column(self, column_id, last_col_id=None):
        wait_until(self.driver, Expect.visible((By.CSS, '.ag-center-cols-container .ag-row-first')))
        # wait_until(self.driver, Expect.visible((By.CLASS, 'ag-row-first')))
        rendered_columns = [c.get_attribute('col-id') for c in self.list_rendered_columns()]
        last_rendered_column_id = rendered_columns[-1]
        if (column_id in rendered_columns) or (last_col_id == last_rendered_column_id):
            # column visible, or all columns rendered and it was not found
            return True

        # navigate to the last column and check rendered columns once again
        self.get_rows(True)[0].find_cell_by_col_id(last_rendered_column_id).send_keys(Keys.LEFT)
        return self.navigate_to_the_column(column_id, last_rendered_column_id)

    # Grid row functionalities
    def get_rows(self, force=False):
        if not self._rows or force:
            rows = self.context.find_elements_by_css_selector('.ag-center-cols-container .ag-row')
            self._rows = [self.row_wrapper(row, self.driver) for row in rows]
        return self._rows

    @staticmethod
    def get_row_cells(row):
        return row.find_elements_by_css_selector('.ag-cell')

    def expand_row(self, index):
        cell = self.get_rows()[index].find_cell_by_index(0)
        ActionChains(self.driver).move_to_element(cell).double_click().perform()

    def get_row_by_index(self, index):
        try:
            selector = f'.ag-center-cols-container .ag-row[row-index=&quot;{index}&quot;]'
            return self.row_wrapper(self.body.find_element(By.CSS, selector), self.driver)
        except NoSuchElementException:
            return None

    def get_row_by_value_in_column_name(self, column_name, value):
        try:
            column = self.header.find_column(column_name, 'column_name')
            col_id = column.get_attribute('col-id')
            return self.get_row_by_value_in_col_id(col_id, value)
        except NoSuchElementException:
            return None

    def get_row_by_value_in_col_id(self, col_id, value):
        try:
            xpath = f'.//div[@col-id=&quot;{col_id}&quot; and normalize-space(.) = &quot;{value}&quot;]/..'
            return self.row_wrapper(self.body.find_element(By.XPATH, xpath), self.driver)
        except NoSuchElementException:
            return None

    def get_cell_value_by_column_id(self, row, column_id):
        self.navigate_to_the_column(column_id)
        return row.get_cell_value_by_col_id(column_id)

    # Side bar functionalities
    def set_visible_columns(self, column_list):
        with self.side_bar() as side_bar:
            side_bar.columns_panel.enable_columns(column_list)

    def list_visible_columns(self):
        with self.side_bar() as side_bar:
            columns = side_bar.columns_panel.get_all_enabled_columns()
            column_names = [column.text for column in columns]
            return column_names

    def select_all_columns(self):
        with self.side_bar() as side_bar:
            side_bar.columns_panel.select_all()

    def unselect_all_columns(self):
        with self.side_bar() as side_bar:
            s</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAjIHNlbGYubG9hZF9wYWdlKHVybCwgY29uZGl0aW9uPUV4cGVjdC52aXNpYmxlKHNlbGYudGFibGUubG9jYXRvcikpCg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAjIHRpbWUuc2xlZXAoMTApCg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAjIHNlbGYubG9hZF9wYWdlKHVybCwgY29uZGl0aW9uPXNlbGYuX3dhaXRfZm9yX3RhYmxlX3JlbmRlcmVkKCkpCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAjIGVpdGhlciBkYXRhIG9yIG5vIGRhdGEKICAgICAgICByZXR1cm4gRXhwZWN0LnZpc2libGUoKEJ5LkNTUywgJy5hZy1yb3ctZmlyc3QsIC5hZy1jZW50ZXItY29scy1jb250YWluZXInKSkKICAgICAgICAjICdhZy1vdmVybGF5LW5vLXJvd3Mtd3JhcHBlcicK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAjIHNlbGYubG9hZF9wYWdlKHVybCwgY29uZGl0aW9uPXNlbGYuX3dhaXRfZm9yX3RhYmxlX3JlbmRlcmVkKCkpCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAjIHNlbGYubG9hZF9wYWdlKHVybCwgY29uZGl0aW9uPUV4cGVjdC52aXNpYmxlKChCeS5DU1MsICcuYWctY2VudGVyLWNvbHMtY29udGFpbmVyIC5hZy1yb3ctZmlyc3QsICcpKSkK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAjIHNlbGYubG9hZF9wYWdlKHVybCwgY29uZGl0aW9uPUV4cGVjdC52aXNpYmxlKChCeS5DU1MsICcuYWctY2VudGVyLWNvbHMtY29udGFpbmVyIC5hZy1yb3ctZmlyc3QnKSkpCiAgICAgICAgIyBzZWxmLmxvYWRfcGFnZSh1cmwsIGNvbmRpdGlvbj1FeHBlY3QudmlzaWJsZSgoQnkuQ0xBU1NfTkFNRSwgJ2FnLXJvdy1maXJzdCcpKSkK</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICB0ZXN0U3RyaW5nID0gJ2pvZScK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICBzZWxmLmxvYWRfcGFnZSh1cmwsIGNvbmRpdGlvbj1zZWxmLl93YWl0X2Zvcl90YWJsZV9yZW5kZXJlZCgpKQogICAgICAgIHRlc3RTdHJpbmcgPSAnam9lJwo=</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search encoding="base64">XDxjb250YWluZXJcPg==</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxjb250YWluZXJcPg==</last-pattern>
      <last-replace>for</last-replace>
      <last-substitute>if</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>